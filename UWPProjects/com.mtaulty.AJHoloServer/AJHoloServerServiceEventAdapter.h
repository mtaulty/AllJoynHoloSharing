//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace mtaulty { namespace AJHoloServer {

// This class, and the associated EventArgs classes, exist for the benefit of JavaScript developers who
// do not have the ability to implement IAJHoloServerService. Instead, AJHoloServerServiceEventAdapter
// provides the Interface implementation and exposes a set of compatible events to the developer.
public ref class AJHoloServerServiceEventAdapter sealed : [Windows::Foundation::Metadata::Default] IAJHoloServerService
{
public:
    // Method Invocation Events
    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerAddWorldAnchorCalledEventArgs^>^ AddWorldAnchorCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerAddWorldAnchorCalledEventArgs^>^ handler) 
        { 
            return _AddWorldAnchorCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerAddWorldAnchorCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _AddWorldAnchorCalled -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerAddWorldAnchorCalledEventArgs^ args) 
        { 
            _AddWorldAnchorCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerAddHologramToAnchorCalledEventArgs^>^ AddHologramToAnchorCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerAddHologramToAnchorCalledEventArgs^>^ handler) 
        { 
            return _AddHologramToAnchorCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerAddHologramToAnchorCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _AddHologramToAnchorCalled -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerAddHologramToAnchorCalledEventArgs^ args) 
        { 
            _AddHologramToAnchorCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerRemoveHologramCalledEventArgs^>^ RemoveHologramCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerRemoveHologramCalledEventArgs^>^ handler) 
        { 
            return _RemoveHologramCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerRemoveHologramCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _RemoveHologramCalled -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerRemoveHologramCalledEventArgs^ args) 
        { 
            _RemoveHologramCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetWorldAnchorCalledEventArgs^>^ GetWorldAnchorCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetWorldAnchorCalledEventArgs^>^ handler) 
        { 
            return _GetWorldAnchorCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerGetWorldAnchorCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetWorldAnchorCalled -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerGetWorldAnchorCalledEventArgs^ args) 
        { 
            _GetWorldAnchorCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetWorldAnchorIdsCalledEventArgs^>^ GetWorldAnchorIdsCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetWorldAnchorIdsCalledEventArgs^>^ handler) 
        { 
            return _GetWorldAnchorIdsCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerGetWorldAnchorIdsCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetWorldAnchorIdsCalled -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerGetWorldAnchorIdsCalledEventArgs^ args) 
        { 
            _GetWorldAnchorIdsCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetHologramIdsAndNamesCalledEventArgs^>^ GetHologramIdsAndNamesCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetHologramIdsAndNamesCalledEventArgs^>^ handler) 
        { 
            return _GetHologramIdsAndNamesCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerGetHologramIdsAndNamesCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetHologramIdsAndNamesCalled -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerGetHologramIdsAndNamesCalledEventArgs^ args) 
        { 
            _GetHologramIdsAndNamesCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetHologramTransformsCalledEventArgs^>^ GetHologramTransformsCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetHologramTransformsCalledEventArgs^>^ handler) 
        { 
            return _GetHologramTransformsCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerGetHologramTransformsCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetHologramTransformsCalled -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerGetHologramTransformsCalledEventArgs^ args) 
        { 
            _GetHologramTransformsCalled(sender, args);
        } 
    }

    // Property Read Events
    event Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetDeviceConnectedCountRequestedEventArgs^>^ GetDeviceConnectedCountRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<AJHoloServerServiceEventAdapter^, AJHoloServerGetDeviceConnectedCountRequestedEventArgs^>^ handler) 
        { 
            return _GetDeviceConnectedCountRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<AJHoloServerServiceEventAdapter^>(sender), safe_cast<AJHoloServerGetDeviceConnectedCountRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetDeviceConnectedCountRequested -= token; 
        } 
    internal: 
        void raise(AJHoloServerServiceEventAdapter^ sender, AJHoloServerGetDeviceConnectedCountRequestedEventArgs^ args) 
        { 
            _GetDeviceConnectedCountRequested(sender, args);
        } 
    }

    // Property Write Events
    // IAJHoloServerService Implementation
    virtual Windows::Foundation::IAsyncOperation<AJHoloServerAddWorldAnchorResult^>^ AddWorldAnchorAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberAnchorId, _In_ uint32 interfaceMemberByteStart, _In_ uint32 interfaceMemberByteLength, _In_ bool interfaceMemberLastBlock, _In_ Windows::Foundation::Collections::IVectorView<byte>^ interfaceMemberAnchorData);
    virtual Windows::Foundation::IAsyncOperation<AJHoloServerAddHologramToAnchorResult^>^ AddHologramToAnchorAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberAnchorId, _In_ Platform::String^ interfaceMemberHoloId, _In_ Platform::String^ interfaceMemberHoloTypeName, _In_ AJHoloServerPosition^ interfaceMemberPosition);
    virtual Windows::Foundation::IAsyncOperation<AJHoloServerRemoveHologramResult^>^ RemoveHologramAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberHoloId);
    virtual Windows::Foundation::IAsyncOperation<AJHoloServerGetWorldAnchorResult^>^ GetWorldAnchorAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberAnchorId, _In_ uint32 interfaceMemberByteIndex, _In_ uint32 interfaceMemberByteLength);
    virtual Windows::Foundation::IAsyncOperation<AJHoloServerGetWorldAnchorIdsResult^>^ GetWorldAnchorIdsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<AJHoloServerGetHologramIdsAndNamesResult^>^ GetHologramIdsAndNamesAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<AJHoloServerGetHologramTransformsResult^>^ GetHologramTransformsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    virtual Windows::Foundation::IAsyncOperation<AJHoloServerGetDeviceConnectedCountResult^>^ GetDeviceConnectedCountAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);


private:
    event Windows::Foundation::EventHandler<Platform::Object^>^ _AddWorldAnchorCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _AddHologramToAnchorCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _RemoveHologramCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetWorldAnchorCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetWorldAnchorIdsCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetHologramIdsAndNamesCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetHologramTransformsCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetDeviceConnectedCountRequested;
};

} } } 
