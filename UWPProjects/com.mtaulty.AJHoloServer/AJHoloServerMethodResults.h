//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

using namespace concurrency;

namespace com { namespace mtaulty { namespace AJHoloServer {

ref class AJHoloServerConsumer;

public ref class AJHoloServerAddWorldAnchorResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    
    static AJHoloServerAddWorldAnchorResult^ CreateSuccessResult()
    {
        auto result = ref new AJHoloServerAddWorldAnchorResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AJHoloServerAddWorldAnchorResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerAddWorldAnchorResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class AJHoloServerAddHologramToAnchorResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    
    static AJHoloServerAddHologramToAnchorResult^ CreateSuccessResult()
    {
        auto result = ref new AJHoloServerAddHologramToAnchorResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AJHoloServerAddHologramToAnchorResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerAddHologramToAnchorResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class AJHoloServerRemoveHologramResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    
    static AJHoloServerRemoveHologramResult^ CreateSuccessResult()
    {
        auto result = ref new AJHoloServerRemoveHologramResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AJHoloServerRemoveHologramResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerRemoveHologramResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class AJHoloServerGetWorldAnchorResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Windows::Foundation::Collections::IVector<byte>^ AnchorData
    {
        Windows::Foundation::Collections::IVector<byte>^ get() { return m_interfaceMemberAnchorData; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<byte>^ value) { m_interfaceMemberAnchorData = value; }
    }
    
    static AJHoloServerGetWorldAnchorResult^ CreateSuccessResult(_In_ Windows::Foundation::Collections::IVector<byte>^ interfaceMemberAnchorData)
    {
        auto result = ref new AJHoloServerGetWorldAnchorResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->AnchorData = interfaceMemberAnchorData;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AJHoloServerGetWorldAnchorResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerGetWorldAnchorResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    Windows::Foundation::Collections::IVector<byte>^ m_interfaceMemberAnchorData;
};

public ref class AJHoloServerGetWorldAnchorIdsResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Windows::Foundation::Collections::IVector<Platform::String^>^ AnchorData
    {
        Windows::Foundation::Collections::IVector<Platform::String^>^ get() { return m_interfaceMemberAnchorData; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<Platform::String^>^ value) { m_interfaceMemberAnchorData = value; }
    }
    
    static AJHoloServerGetWorldAnchorIdsResult^ CreateSuccessResult(_In_ Windows::Foundation::Collections::IVector<Platform::String^>^ interfaceMemberAnchorData)
    {
        auto result = ref new AJHoloServerGetWorldAnchorIdsResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->AnchorData = interfaceMemberAnchorData;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AJHoloServerGetWorldAnchorIdsResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerGetWorldAnchorIdsResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    Windows::Foundation::Collections::IVector<Platform::String^>^ m_interfaceMemberAnchorData;
};

public ref class AJHoloServerGetHologramIdsAndNamesResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Windows::Foundation::Collections::IVector<AJHoloServerHoloIdsItem^>^ HoloIds
    {
        Windows::Foundation::Collections::IVector<AJHoloServerHoloIdsItem^>^ get() { return m_interfaceMemberHoloIds; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<AJHoloServerHoloIdsItem^>^ value) { m_interfaceMemberHoloIds = value; }
    }
    
    static AJHoloServerGetHologramIdsAndNamesResult^ CreateSuccessResult(_In_ Windows::Foundation::Collections::IVector<AJHoloServerHoloIdsItem^>^ interfaceMemberHoloIds)
    {
        auto result = ref new AJHoloServerGetHologramIdsAndNamesResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->HoloIds = interfaceMemberHoloIds;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AJHoloServerGetHologramIdsAndNamesResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerGetHologramIdsAndNamesResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    Windows::Foundation::Collections::IVector<AJHoloServerHoloIdsItem^>^ m_interfaceMemberHoloIds;
};

public ref class AJHoloServerGetHologramTransformsResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Windows::Foundation::Collections::IVector<AJHoloServerHoloPositionsItem^>^ HoloPositions
    {
        Windows::Foundation::Collections::IVector<AJHoloServerHoloPositionsItem^>^ get() { return m_interfaceMemberHoloPositions; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<AJHoloServerHoloPositionsItem^>^ value) { m_interfaceMemberHoloPositions = value; }
    }
    
    static AJHoloServerGetHologramTransformsResult^ CreateSuccessResult(_In_ Windows::Foundation::Collections::IVector<AJHoloServerHoloPositionsItem^>^ interfaceMemberHoloPositions)
    {
        auto result = ref new AJHoloServerGetHologramTransformsResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->HoloPositions = interfaceMemberHoloPositions;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AJHoloServerGetHologramTransformsResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerGetHologramTransformsResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    Windows::Foundation::Collections::IVector<AJHoloServerHoloPositionsItem^>^ m_interfaceMemberHoloPositions;
};

public ref class AJHoloServerJoinSessionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property AJHoloServerConsumer^ Consumer
    {
        AJHoloServerConsumer^ get() { return m_consumer; }
    internal:
        void set(_In_ AJHoloServerConsumer^ value) { m_consumer = value; }
    };

private:
    int32 m_status;
    AJHoloServerConsumer^ m_consumer;
};

public ref class AJHoloServerGetDeviceConnectedCountResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 DeviceConnectedCount
    {
        uint32 get() { return m_value; }
    internal:
        void set(_In_ uint32 value) { m_value = value; }
    }

    static AJHoloServerGetDeviceConnectedCountResult^ CreateSuccessResult(_In_ uint32 value)
    {
        auto result = ref new AJHoloServerGetDeviceConnectedCountResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->DeviceConnectedCount = value;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }

    static AJHoloServerGetDeviceConnectedCountResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AJHoloServerGetDeviceConnectedCountResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_value;
};

} } } 
